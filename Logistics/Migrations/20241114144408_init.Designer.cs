// <auto-generated />
using System;
using Logistics.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Logistics.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20241114144408_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Logistics.Data.Models.PendingEmail", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("userid")
                        .HasColumnType("uuid");

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("userid");

                    b.ToTable("PendingEmails");
                });

            modelBuilder.Entity("Logistics.Data.Models.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("INN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("role")
                        .HasColumnType("integer");

                    b.Property<string>("token")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Users");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Logistics.Data.Models.Shipper", b =>
                {
                    b.HasBaseType("Logistics.Data.Models.User");

                    b.Property<string>("directorContact")
                        .HasColumnType("text");

                    b.Property<string>("organizationName")
                        .HasColumnType("text");

                    b.Property<string>("personInChargeContact")
                        .HasColumnType("text");

                    b.ToTable("Shippers");
                });

            modelBuilder.Entity("Logistics.Data.Models.Transporter", b =>
                {
                    b.HasBaseType("Logistics.Data.Models.User");

                    b.Property<string>("permanentResidence")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("Transporters");
                });

            modelBuilder.Entity("Logistics.Data.Models.PendingEmail", b =>
                {
                    b.HasOne("Logistics.Data.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Logistics.Data.Models.Shipper", b =>
                {
                    b.HasOne("Logistics.Data.Models.User", null)
                        .WithOne()
                        .HasForeignKey("Logistics.Data.Models.Shipper", "id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Logistics.Data.Models.Transporter", b =>
                {
                    b.HasOne("Logistics.Data.Models.User", null)
                        .WithOne()
                        .HasForeignKey("Logistics.Data.Models.Transporter", "id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
